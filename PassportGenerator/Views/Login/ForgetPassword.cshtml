@model PassportGenerator.Models.Registration

@{
    ViewBag.Title = "ForgetPassword";
}



<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.3/umd/popper.min.js"></script>
    <style>
        body {
            background-image: url('../../imgs/passport.jpg');
            background-size: cover;
            background-position: center;
            position: relative;
        }

            body::before {
                content: "";
                background: inherit;
                filter: blur(5px);
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: -1;
            }
            img{
                height:1200px;
                width:1200px;
            }
            h1{
                display:flex;
                justify-content:center;
                color:white;
            }

            .pass-heading{
                display:flex;
                justify-content:center;
            }
    </style>
</head>
<body>
    <h1>Forget Password</h1>
    <div class="container">
        <div class="row">
            <div class="col-md-6">

                <img src="~/Imgs/Passport.jpg" alt="PassportImag" class="img-fluid">
            </div>
            <div class="col-md-6 ">

                @if (TempData["ChangePassError"] != null)
                {
                    <script>
                        alert('@TempData["ChangePassError"]');
                    </script>
                }

                @if (TempData["PasswordChangeUserNotExist"] != null)
                {
                    <script>
                        alert('@TempData["PasswordChangeUserNotExist"]');
                    </script>
                }

                @using (Html.BeginForm("ForgetPassword", "Login", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="card shadow p-3 mb-5 bg-body-tertiary rounded">
                        <h2 class="fw-bold toast-header pass-heading">Reset Password</h2>
                        <div class="card-body">
                            <div class="form-group">
                                <label for="Email" class="">Email</label>
                                <input type="email" name="Email" value="" id="Email" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                <div id="EmailError" class="text-danger"></div>
                            </div>
                            <div class="form-group">
                                <label for="password" class="">Create new Password</label>
                                <input type="password" name="password" value="" id="password" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                <div id="PasswordError" class="text-danger"></div>
                            </div>
                            <div class="form-group">
                                <label for="confirmpassword" class="">Confirm Password</label>
                                <input type="password" name="confirmpassword" value="" id="confirmpassword" class="form-control" />
                                <div id="confirmError" class="text-danger"></div>
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Create" class="btn btn-dark" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to Login", "Index")
                </div>
            </div>
        </div>
    </div>

    <script>
        var Email = document.getElementById('Email');
        var Password = document.getElementById('password');
        var confirmPassword = document.getElementById('confirmpassword');


        var emailError = document.getElementById("EmailError");
        var passwordError = document.getElementById("PasswordError");
        var confirmError = document.getElementById("confirmError");

        Email.addEventListener('blur', () => {
            var emailValue = Email.value.trim();
            if (emailValue === "") {
                emailError.textContent = "Email is required ";
            }
            else if (!/^\S+@@\S+\.\S+$/.test(emailValue)) {
                emailError.textContent = "Invalid email address"
            }
            else {
                emailError.textContent = "";
            }

        });

        Password.addEventListener('blur', () => {
            var passwordValue = Password.value.trim();
            if (passwordValue === "") {
                passwordError.textContent = "Password is required";
            }
            else if (passwordValue < 8) {
                passwordError.textContent = "Password should be more than 8 digits"
            }
            else if (!/\d/.test(passwordValue)) {
                passwordError.textContent = "Password should contain at least one number!";
            } else {
                // Clear the error message
                passwordError.textContent = "";
            }
        });


        confirmPassword.addEventListener('blur', () => {
            var confirmPasswordValue = confirmPassword.value.trim();
            var passwordValue = Password.value.trim();
            if (confirmPasswordValue === "") {
                confirmError.textContent = "Need to confirm password"
            }
            else if (confirmPasswordValue != passwordValue) {
                confirmError.textContent = "Password doesn't match"
            }
            else {
                confirmError.textContent = ""
            }
        })

    </script>
</body>
</html>

